"""Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms."""

#we start by defining a function that takes the max Fibonacci value and the divisor
def Fibsum(x, y):
    
    #define Variables
    fiblist = [1, 2, 3]
    fibs = 0
    
    #create the list of Fibonacci numbers less than x
    while fiblist[-1] < x:
        fiblist.append(fiblist[-1]+fiblist[-2])
    
    #find the sum of all Fibonacci numbers that satify the conditions
    for i in fiblist:
        if i % y == 0:
            fibs += i
    
    #report results
    print "The sum of all Fibonacci numbers less than %d that are divisible by %d is %d" % (x, y, fibs)    

#call the function with the proper arguments to find the solution
Fibsum(4000000, 2)
